class ShipClass {
    dmg: number;
    hp: number;
    spd: number;
    frt: number;
    img: string;
    constructor(dmg: number, hp: number, spd: number, frt: number, img: string){
        this.dmg = dmg;
        this.hp = hp;
        this.spd = spd;
        this.frt = frt;
        this.img = img;
    }
}

const shipClasses = {
    "striker": {
        "dmg": 7,
        "hp": 5,
        "spd": 4,
        "frt": 4,
        "img": img`
            ...5................
            ..565...............
            ..5469..............
            .544469.............
            .5544469............
            .96544469...........
            .996544465...999....
            .994654445....aa9...
            .944445555.55577755.
            .4444444445447888765
            .4444444445447888765
            .944465555.55577755.
            .994654445....aa9...
            .996544465...999....
            .96544469...........
            .5544469............
            .544469.............
            ..5469..............
            ..565...............
            ...5................
            `
    },
    "falcon": {

    },
    "blitz": {

    },
    "juggernaut": {

    }
}


let player = sprites.create(img`
            ...5................
            ..565...............
            ..5469..............
            .544469.............
            .5544469............
            .96544469...........
            .996544465...999....
            .994654445....aa9...
            .944445555.55577755.
            .4444444445447888765
            .4444444445447888765
            .944465555.55577755.
            .994654445....aa9...
            .996544465...999....
            .96544469...........
            .5544469............
            .544469.............
            ..5469..............
            ..565...............
            ...5................
            `, SpriteKind.Player)

let dmg = 7
let hp = 20
let health = hp
let spd = 3
let frt = 5


while (true){
    const velocity = normalize(controller.dx(), controller.dy())
    player.setPosition(Math.clamp(10, 151, player.x + velocity[0] * spd), Math.clamp(10, 110, player.y + velocity[1] * spd))
    basic.pause(25)
}